# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-21 15:12
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('contactDbId', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('type', models.TextField(blank=True)),
                ('orcid', models.TextField(blank=True)),
                ('instituteName', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('cropDbId', models.TextField(primary_key=True, serialize=False)),
                ('commonName', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donorAccessionNumber', models.TextField(blank=True)),
                ('donorInstituteCode', models.TextField(blank=True)),
                ('donorGermplasmPUI', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Germplasm',
            fields=[
                ('germplasmDbId', models.TextField(primary_key=True, serialize=False)),
                ('germplasmPUI', models.TextField(blank=True)),
                ('germplasmName', models.TextField()),
                ('defaultDisplayName', models.TextField()),
                ('accessionNumber', models.TextField(blank=True)),
                ('pedigree', models.TextField(blank=True)),
                ('seedSource', models.TextField(blank=True)),
                ('synonyms', models.TextField(blank=True)),
                ('instituteCode', models.TextField()),
                ('instituteName', models.TextField(blank=True)),
                ('biologicalStatusOfAccessionCode', models.TextField(blank=True)),
                ('countryOfOriginCode', models.TextField(blank=True)),
                ('typeOfGermplasmStorageCode', models.TextField(blank=True)),
                ('genus', models.TextField(blank=True)),
                ('species', models.TextField(blank=True)),
                ('speciesAuthority', models.TextField(blank=True)),
                ('subtaxa', models.TextField(blank=True)),
                ('subtaxaAuthority', models.TextField(blank=True)),
                ('acquisitionDate', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='GermplasmAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributeDbId', models.TextField(unique=True)),
                ('code', models.TextField(blank=True)),
                ('uri', models.TextField(blank=True)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('datatype', models.TextField(blank=True)),
                ('values', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GermplasmAttributeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributeCategoryDbId', models.TextField(unique=True)),
                ('attributeCategoryName', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='GermplasmAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('determinedDate', models.TextField(blank=True)),
                ('value', models.TextField()),
                ('attributeDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.GermplasmAttribute')),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('germplasmDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Germplasm')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationDbId', models.TextField(primary_key=True, serialize=False)),
                ('type', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('abbreviation', models.TextField(blank=True)),
                ('countryCode', models.TextField(blank=True)),
                ('countryName', models.TextField(blank=True)),
                ('latitude', models.TextField(blank=True)),
                ('longitude', models.TextField(blank=True)),
                ('altitude', models.TextField(blank=True)),
                ('instituteName', models.TextField(blank=True)),
                ('instituteAddress', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='LocationAdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('value', models.TextField()),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('locationDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('mapDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Marker',
            fields=[
                ('markerDbId', models.TextField(primary_key=True, serialize=False)),
                ('defaultDisplayName', models.TextField(blank=True)),
                ('type', models.TextField(blank=True)),
                ('synonyms', models.TextField(blank=True)),
                ('refAlt', models.TextField(blank=True)),
                ('analysisMethods', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Markerprofile',
            fields=[
                ('markerProfileDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('methodDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('observationTimeStamp', models.TextField(blank=True)),
                ('observationDbId', models.TextField(primary_key=True, serialize=False)),
                ('collector', models.TextField(blank=True)),
                ('value', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observationUnitDbId', models.TextField(unique=True)),
                ('name', models.TextField()),
                ('observationUnitLevel', models.TextField(blank=True)),
                ('observationUnitLevels', models.TextField(blank=True)),
                ('entryNumber', models.TextField(blank=True)),
                ('entryType', models.TextField(blank=True)),
                ('plotNumber', models.TextField(blank=True)),
                ('blockNumber', models.TextField(blank=True)),
                ('plantNumber', models.TextField(blank=True)),
                ('x', models.TextField(blank=True)),
                ('y', models.TextField(blank=True)),
                ('replicate', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('germplasmDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Germplasm')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationUnitTreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.TextField()),
                ('modality', models.TextField()),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('observationUnitDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.ObservationUnit')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationUnitXref',
            fields=[
                ('source', models.TextField()),
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('observationUnitDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.ObservationUnit')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observationVariableDbId', models.TextField(unique=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('methodDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Method')),
            ],
        ),
        migrations.CreateModel(
            name='Ontology',
            fields=[
                ('ontologyDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Pedigree',
            fields=[
                ('pedigree', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('germplasmDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedigreeObject', to='jsonapi.Germplasm')),
                ('parent1Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedigreeChild1', to='jsonapi.Germplasm')),
                ('parent2Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedigreeChild2', to='jsonapi.Germplasm')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('programDbId', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('abbreviation', models.TextField(blank=True)),
                ('objective', models.TextField(blank=True)),
                ('leadPerson', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('sampleDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('scaleDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('seasonDbId', models.TextField(primary_key=True, serialize=False)),
                ('year', models.TextField(blank=True)),
                ('season', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('studyDbId', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('startDate', models.TextField(blank=True)),
                ('endDate', models.TextField(blank=True)),
                ('active', models.NullBooleanField()),
                ('license', models.TextField(blank=True)),
                ('lastUpdateVersion', models.TextField(blank=True)),
                ('lastUpdateTimestamp', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('locationDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Location')),
            ],
        ),
        migrations.CreateModel(
            name='StudyAdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('value', models.TextField()),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('studyDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Study')),
            ],
        ),
        migrations.CreateModel(
            name='StudyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Contact')),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('studyDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Study')),
            ],
        ),
        migrations.CreateModel(
            name='StudyDataLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
                ('type', models.TextField(blank=True)),
                ('url', models.TextField()),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('studyDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Study')),
            ],
        ),
        migrations.CreateModel(
            name='StudySeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('seasonDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Season')),
                ('studyDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Study')),
            ],
        ),
        migrations.CreateModel(
            name='StudyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonXref',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonDbId', models.TextField(unique=True)),
                ('source', models.TextField()),
                ('rank', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonXrefGermplasm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('germplasmDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Germplasm')),
                ('taxonDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.TaxonXref')),
            ],
        ),
        migrations.CreateModel(
            name='Trait',
            fields=[
                ('traitDbId', models.TextField(primary_key=True, serialize=False)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('trialDbId', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('startDate', models.TextField(blank=True)),
                ('endDate', models.TextField(blank=True)),
                ('active', models.NullBooleanField()),
                ('datasetAuthorshipLicence', models.TextField(blank=True)),
                ('datasetAuthorshipDatasetPUI', models.TextField(blank=True)),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('programDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Program')),
            ],
        ),
        migrations.CreateModel(
            name='TrialAdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField()),
                ('value', models.TextField()),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('trialDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Trial')),
            ],
        ),
        migrations.CreateModel(
            name='TrialContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contactDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Contact')),
                ('cropDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop')),
                ('trialDbId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Trial')),
            ],
        ),
        migrations.AddField(
            model_name='study',
            name='studyType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.StudyType'),
        ),
        migrations.AddField(
            model_name='study',
            name='trialDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Trial'),
        ),
        migrations.AddField(
            model_name='observationvariable',
            name='ontologyDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Ontology'),
        ),
        migrations.AddField(
            model_name='observationvariable',
            name='scaleDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Scale'),
        ),
        migrations.AddField(
            model_name='observationvariable',
            name='traitDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Trait'),
        ),
        migrations.AddField(
            model_name='observationunit',
            name='studyDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Study'),
        ),
        migrations.AddField(
            model_name='observation',
            name='observationUnitDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.ObservationUnit'),
        ),
        migrations.AddField(
            model_name='observation',
            name='observationVariableDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.ObservationVariable'),
        ),
        migrations.AddField(
            model_name='observation',
            name='seasonDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Season'),
        ),
        migrations.AddField(
            model_name='germplasmattribute',
            name='attributeCategoryDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.GermplasmAttributeCategory'),
        ),
        migrations.AddField(
            model_name='germplasmattribute',
            name='cropDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop'),
        ),
        migrations.AddField(
            model_name='donor',
            name='germplasmDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Germplasm'),
        ),
        migrations.AddField(
            model_name='contact',
            name='cropDbId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jsonapi.Crop'),
        ),
    ]
